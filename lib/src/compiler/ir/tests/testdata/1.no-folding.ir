RULE test_1
  id:12 parent:None:  EQ [0x65918958e229b41b]
    id:10 parent:12:  SUB [0xbb5b2d3c003a978d]
      id:8 parent:10:  ADD [0x32e284abcc26d05b]
        id:6 parent:8:  CONST integer(1)
        id:7 parent:8:  CONST integer(1)
      id:9 parent:10:  CONST integer(1)
    id:11 parent:12:  CONST integer(1)

RULE test_2
  id:6 parent:None:  GT [0x931bcdb2c7afb608]
    id:4 parent:6:  DIV [0xf2b3602767487d08]
      id:2 parent:4:  MUL [0x23a380280d1b4f32]
        id:0 parent:2:  CONST integer(1)
        id:1 parent:2:  CONST integer(2)
      id:3 parent:4:  CONST integer(1)
    id:5 parent:6:  CONST integer(1)

RULE test_3
  id:6 parent:None:  LE [0x63b2e857a1254c2b]
    id:4 parent:6:  SHR [0x8dd6307742aa2311]
      id:2 parent:4:  SHL [0x48eeb57428a0dbf0]
        id:0 parent:2:  CONST integer(1)
        id:1 parent:2:  CONST integer(2)
      id:3 parent:4:  CONST integer(1)
    id:5 parent:6:  CONST integer(2)

RULE test_4
  id:14 parent:None:  EQ [0x2240111cff945ff5]
    id:12 parent:14:  SUB [0xa076dada583953db]
      id:7 parent:12:  CONST integer(4)
      id:11 parent:12:  MUL [0xd1635797e1f50589]
        id:9 parent:11:  MINUS [0xb5577ca94105cb4b]
          id:8 parent:9:  CONST integer(2)
        id:10 parent:11:  CONST integer(2)
    id:13 parent:14:  CONST integer(8)

RULE test_5
  id:12 parent:None:  AND [0x1e7c6065ed040c49]
    id:8 parent:12:  EQ [0x78262602520cebf1]
      id:6 parent:8:  FIELD_ACCESS [0x6d93cf8c80a38e93]
        id:4 parent:6:  IDENT Field { index: 0, is_root: true, type_value: struct }
        id:5 parent:6:  IDENT Field { index: 1, is_root: false, type_value: integer(unknown) }
      id:7 parent:8:  CONST integer(0)
    id:9 parent:12:  CONST boolean(true)
    id:11 parent:12:  NOT [0x2c3c4fda5217a5f3]
      id:10 parent:11:  CONST boolean(false)

RULE test_6
  id:5 parent:None:  ADD [0xeb09fb0c289a1e4a]
    id:2 parent:5:  FIELD_ACCESS [0x6d93cf8c80a38e93]
      id:0 parent:2:  IDENT Field { index: 0, is_root: true, type_value: struct }
      id:1 parent:2:  IDENT Field { index: 1, is_root: false, type_value: integer(unknown) }
    id:3 parent:5:  CONST integer(1)
    id:4 parent:5:  CONST integer(2)

RULE test_7
  id:18 parent:None:  AND [0xb21fa80def581aea]
    id:2 parent:18:  CONTAINS [0x702eaf70b18909ff]
      id:0 parent:2:  CONST string("foobar")
      id:1 parent:2:  CONST string("bar")
    id:5 parent:18:  ICONTAINS [0xe30a191883a20729]
      id:3 parent:5:  CONST string("foobar")
      id:4 parent:5:  CONST string("BAR")
    id:8 parent:18:  STARTS_WITH [0xc963b1bf1e8d9506]
      id:6 parent:8:  CONST string("foobar")
      id:7 parent:8:  CONST string("foo")
    id:11 parent:18:  ISTARTS_WITH [0x1ce5974aa4aaacaa]
      id:9 parent:11:  CONST string("foobar")
      id:10 parent:11:  CONST string("FOO")
    id:14 parent:18:  ENDS_WITH [0x4394dbecb8c89956]
      id:12 parent:14:  CONST string("foobar")
      id:13 parent:14:  CONST string("bar")
    id:17 parent:18:  IENDS_WITH [0xb67045948ae19680]
      id:15 parent:17:  CONST string("foobar")
      id:16 parent:17:  CONST string("BAR")

