RULE test
  42: FOR_IN -- hash: 0xa2398796677b1025 -- parent: None 
    0: CONST integer(0) -- parent: 42 
    1: PATTERN_COUNT PatternIdx(0) -- hash: 0xa0a54267ad7f087f -- parent: 42 
    41: FOR_IN -- hash: 0x7b9192debb2cebb0 -- parent: 42 
      2: CONST integer(0) -- parent: 41 
      3: PATTERN_COUNT PatternIdx(1) -- hash: 0x5378b902c7004afb -- parent: 41 
      40: FOR_IN -- hash: 0xd2a8903d700186b4 -- parent: 41 
        6: FIELD_ACCESS -- hash: 0x7226744cca3b46 -- parent: 40 
          4: IDENT Field { index: 0, is_root: true, type_value: struct } -- parent: 6 
          5: IDENT Field { index: 19, is_root: false, type_value: array } -- parent: 6 
        39: AND -- hash: 0xc066768b2c5f2399 -- parent: 40 
          12: LE -- hash: 0x278dcf14bc1f2f5b -- parent: 39 
            9: FIELD_ACCESS -- hash: 0x63a33b148038cd32 -- parent: 12 
              7: IDENT Var { var: Var { frame_id: 3, ty: struct, index: 19 }, type_value: struct } -- parent: 9 
              8: IDENT Field { index: 0, is_root: false, type_value: integer(unknown) } -- parent: 9 
            11: PATTERN_OFFSET PatternIdx(0) INDEX -- hash: 0xc12206c6ddd8d9c9 -- parent: 12 
              10: IDENT Var { var: Var { frame_id: 1, ty: integer, index: 5 }, type_value: integer(unknown) } -- parent: 11 
          22: LE -- hash: 0xcfb412910e3ac82b -- parent: 39 
            14: PATTERN_OFFSET PatternIdx(0) INDEX -- hash: 0xc12206c6ddd8d9c9 -- parent: 22 
              13: IDENT Var { var: Var { frame_id: 1, ty: integer, index: 5 }, type_value: integer(unknown) } -- parent: 14 
            21: ADD -- hash: 0xd0cd351df453c84f -- parent: 22 
              17: FIELD_ACCESS -- hash: 0x63a33b148038cd32 -- parent: 21 
                15: IDENT Var { var: Var { frame_id: 3, ty: struct, index: 19 }, type_value: struct } -- parent: 17 
                16: IDENT Field { index: 0, is_root: false, type_value: integer(unknown) } -- parent: 17 
              20: FIELD_ACCESS -- hash: 0x1676b1af99ca0fae -- parent: 21 
                18: IDENT Var { var: Var { frame_id: 3, ty: struct, index: 19 }, type_value: struct } -- parent: 20 
                19: IDENT Field { index: 1, is_root: false, type_value: integer(unknown) } -- parent: 20 
          28: LE -- hash: 0x4c36cc6634ec8e35 -- parent: 39 
            25: FIELD_ACCESS -- hash: 0x63a33b148038cd32 -- parent: 28 
              23: IDENT Var { var: Var { frame_id: 3, ty: struct, index: 19 }, type_value: struct } -- parent: 25 
              24: IDENT Field { index: 0, is_root: false, type_value: integer(unknown) } -- parent: 25 
            27: PATTERN_OFFSET PatternIdx(1) INDEX -- hash: 0xe5cb041856a638a3 -- parent: 28 
              26: IDENT Var { var: Var { frame_id: 2, ty: integer, index: 12 }, type_value: integer(unknown) } -- parent: 27 
          38: LE -- hash: 0x187b6184a94f3dd6 -- parent: 39 
            30: PATTERN_OFFSET PatternIdx(1) INDEX -- hash: 0xe5cb041856a638a3 -- parent: 38 
              29: IDENT Var { var: Var { frame_id: 2, ty: integer, index: 12 }, type_value: integer(unknown) } -- parent: 30 
            37: ADD -- hash: 0xd0cd351df453c84f -- parent: 38 
              33: FIELD_ACCESS -- hash: 0x63a33b148038cd32 -- parent: 37 
                31: IDENT Var { var: Var { frame_id: 3, ty: struct, index: 19 }, type_value: struct } -- parent: 33 
                32: IDENT Field { index: 0, is_root: false, type_value: integer(unknown) } -- parent: 33 
              36: FIELD_ACCESS -- hash: 0x1676b1af99ca0fae -- parent: 37 
                34: IDENT Var { var: Var { frame_id: 3, ty: struct, index: 19 }, type_value: struct } -- parent: 36 
                35: IDENT Field { index: 1, is_root: false, type_value: integer(unknown) } -- parent: 36 

