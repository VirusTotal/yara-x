RULE test
  FOR_IN
    CONST integer(0)
    PATTERN_COUNT PatternIdx(0)
    FOR_IN
      CONST integer(0)
      PATTERN_COUNT PatternIdx(1)
      FOR_IN
        FIELD_ACCESS
          IDENT Field { index: 0, is_root: true, type_value: struct, acl: None }
          IDENT Field { index: 19, is_root: false, type_value: array, acl: None }
        AND
          LE
            FIELD_ACCESS
              IDENT Var { var: Var { ty: struct, index: 17 }, type_value: struct }
              IDENT Field { index: 0, is_root: false, type_value: integer(unknown), acl: None }
            PATTERN_OFFSET PatternIdx(0) INDEX
              IDENT Var { var: Var { ty: integer, index: 5 }, type_value: integer(unknown) }
          LE
            PATTERN_OFFSET PatternIdx(0) INDEX
              IDENT Var { var: Var { ty: integer, index: 5 }, type_value: integer(unknown) }
            ADD
              FIELD_ACCESS
                IDENT Var { var: Var { ty: struct, index: 17 }, type_value: struct }
                IDENT Field { index: 0, is_root: false, type_value: integer(unknown), acl: None }
              FIELD_ACCESS
                IDENT Var { var: Var { ty: struct, index: 17 }, type_value: struct }
                IDENT Field { index: 1, is_root: false, type_value: integer(unknown), acl: None }
          LE
            FIELD_ACCESS
              IDENT Var { var: Var { ty: struct, index: 17 }, type_value: struct }
              IDENT Field { index: 0, is_root: false, type_value: integer(unknown), acl: None }
            PATTERN_OFFSET PatternIdx(1) INDEX
              IDENT Var { var: Var { ty: integer, index: 11 }, type_value: integer(unknown) }
          LE
            PATTERN_OFFSET PatternIdx(1) INDEX
              IDENT Var { var: Var { ty: integer, index: 11 }, type_value: integer(unknown) }
            ADD
              FIELD_ACCESS
                IDENT Var { var: Var { ty: struct, index: 17 }, type_value: struct }
                IDENT Field { index: 0, is_root: false, type_value: integer(unknown), acl: None }
              FIELD_ACCESS
                IDENT Var { var: Var { ty: struct, index: 17 }, type_value: struct }
                IDENT Field { index: 1, is_root: false, type_value: integer(unknown), acl: None }

