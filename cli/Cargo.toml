[package]
name = "yara-x-cli"
description = """
A command-line interface for YARA-X.
"""
version.workspace = true
authors.workspace = true
edition.workspace = true
readme.workspace = true
license.workspace = true
homepage.workspace = true
rust-version.workspace = true

[[bin]]
name = "yr"
path = "src/main.rs"
# Don't run the CLI tests by default when `cargo test` is executed. The
# CLI tests require the `target/debug/yr` binary do exists before the
# tests are executed. The CLI tests can be run with:
# cargo build
# cargo test -p yara-x-cli --bin yr
test = false

[features]
# Enable the "debug" command for developers.
debug-cmd = []

# When this feature is enabled the CLI program prints debug logs if
# the RUST_LOG environment variable is set to any of the debug levels:
#
#   error
#   warn
#   info
#   debug
#   trace
#
# Example: RUST_LOG=info ./yr scan some_rule.yar some_file
logging = ["dep:log", "dep:env_logger"]

# Enables rules profiling. Notice that profiling has an impact on scan
# performance.
rules-profiling = ["yara-x/rules-profiling"]


[dependencies]
ascii_tree = { workspace = true }
anyhow = { workspace = true }
clap = { workspace = true, features = ["cargo", "derive"] }
clap_complete = { workspace = true }
figment = { workspace = true, features = ["toml"] }
globwalk = { workspace = true }
home = { workspace = true }
itertools = { workspace = true }
enable-ansi-support = { workspace = true }
env_logger = { workspace = true, optional = true, features = ["auto-color"] }
log = { workspace = true, optional = true }
protobuf = { workspace = true }
protobuf-json-mapping = { workspace = true }
serde_json = { workspace = true, features = ["preserve_order"] }
serde = { workspace = true, features = ["derive"] }
strum = { workspace = true }
strum_macros = { workspace = true }
yansi = { workspace = true }
yara-x = { workspace = true, features = ["parallel-compilation"] }
yara-x-parser = { workspace = true }
yara-x-proto-yaml = { workspace = true }
yara-x-fmt = { workspace = true }

chardetng = "0.1.17"
colored_json = "5.0.0"
crossbeam = "0.8.4"
crossterm = "0.28.1"
encoding_rs = "0.8.35"
superconsole = "0.2.0"
wild = "2.2.1"

[dev-dependencies]
assert_cmd = "2.0.16"
assert_fs = "1.1.2"
predicates = { workspace = true }