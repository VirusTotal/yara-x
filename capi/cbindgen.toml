

language = "C"
cpp_compat = false



############## Options for Wrapping the Contents of the Header #################

# header = "/* Text to put at the beginning of the generated file. Probably a license. */"
# trailer = "/* Text to put at the end of the generated file */"
include_guard = "YARA_X"
pragma_once = true
autogen_warning = "// This file is autogenerated by cbindgen. Don't modify it manually."
include_version = true
# namespace = "my_namespace"
namespaces = []
using_namespaces = []
sys_includes = []
includes = []
no_includes = false
after_includes = ""


############################ Code Style Options ################################

braces = "SameLine"
line_length = 80
tab_width = 2
documentation = true
documentation_style = "c99"
documentation_length = "full"
line_endings = "LF"

############################# Codegen Options ##################################

style = "both"
sort_by = "None" # default for `fn.sort_by` and `const.sort_by`
usize_is_size_t = true

[defines]
# "target_os = freebsd" = "DEFINE_FREEBSD"
# "feature = serde" = "DEFINE_SERDE"

[export]
include = []
exclude = []
item_types = []
renaming_overrides_prefixing = false


[export.rename]


[export.body]


[export.mangle]


[fn]
rename_args = "None"
# must_use = "MUST_USE_FUNC"
# no_return = "NO_RETURN"
# prefix = "START_FUNC"
# postfix = "END_FUNC"
args = "vertical"

[struct]
rename_fields = "None"
# must_use = "MUST_USE_STRUCT"
derive_constructor = false
derive_eq = false
derive_neq = false
derive_lt = false
derive_lte = false
derive_gt = false
derive_gte = false


[enum]
rename_variants = "None"
# must_use = "MUST_USE_ENUM"
add_sentinel = false
prefix_with_name = false
derive_helper_methods = false
derive_const_casts = false
derive_mut_casts = false
# cast_assert_name = "ASSERT"
derive_tagged_enum_destructor = false
derive_tagged_enum_copy_constructor = false
enum_class = true
private_default_tagged_enum_constructor = false


[const]
allow_static_const = true
allow_constexpr = false

[macro_expansion]
bitflags = false


############## Options for How Your Rust library Should Be Parsed ##############

[parse]
parse_deps = false
# include = []
exclude = []
clean = false
extra_bindings = []

[parse.expand]
crates = []
all_features = false
default_features = true
features = []