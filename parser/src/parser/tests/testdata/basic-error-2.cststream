Begin { kind: SOURCE_FILE, span: Span(0..62) }
Begin { kind: RULE_DECL, span: Span(0..62) }
Token { kind: RULE_KW, span: Span(0..4) }
Token { kind: WHITESPACE, span: Span(4..5) }
Token { kind: IDENT, span: Span(5..9) }
Token { kind: WHITESPACE, span: Span(9..10) }
Token { kind: L_BRACE, span: Span(10..11) }
Token { kind: NEWLINE, span: Span(11..12) }
Token { kind: WHITESPACE, span: Span(12..14) }
Begin { kind: ERROR, span: Span(14..37) }
Token { kind: STRINGS_KW, span: Span(14..21) }
Token { kind: COLON, span: Span(21..22) }
Token { kind: NEWLINE, span: Span(22..23) }
Token { kind: WHITESPACE, span: Span(23..28) }
Begin { kind: ERROR, span: Span(28..32) }
Token { kind: PATTERN_IDENT, span: Span(28..30) }
Token { kind: WHITESPACE, span: Span(30..31) }
Token { kind: EQUAL, span: Span(31..32) }
End { kind: ERROR, span: Span(28..32) }
Token { kind: WHITESPACE, span: Span(32..33) }
Error { message: "unclosed literal string", span: Span(33..37) }
Token { kind: UNKNOWN, span: Span(33..37) }
End { kind: ERROR, span: Span(14..37) }
Token { kind: NEWLINE, span: Span(37..38) }
Token { kind: WHITESPACE, span: Span(38..40) }
Begin { kind: CONDITION_BLK, span: Span(40..60) }
Token { kind: CONDITION_KW, span: Span(40..49) }
Token { kind: COLON, span: Span(49..50) }
Token { kind: NEWLINE, span: Span(50..51) }
Token { kind: WHITESPACE, span: Span(51..56) }
Begin { kind: BOOLEAN_EXPR, span: Span(56..60) }
Begin { kind: BOOLEAN_TERM, span: Span(56..60) }
Token { kind: TRUE_KW, span: Span(56..60) }
End { kind: BOOLEAN_TERM, span: Span(56..60) }
End { kind: BOOLEAN_EXPR, span: Span(56..60) }
End { kind: CONDITION_BLK, span: Span(40..60) }
Token { kind: NEWLINE, span: Span(60..61) }
Token { kind: R_BRACE, span: Span(61..62) }
End { kind: RULE_DECL, span: Span(0..62) }
End { kind: SOURCE_FILE, span: Span(0..62) }
