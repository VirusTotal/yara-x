Begin { kind: SOURCE_FILE, span: Span(0..57) }
Begin { kind: RULE_DECL, span: Span(0..57) }
Token { kind: RULE_KW, span: Span(0..4) }
Token { kind: WHITESPACE, span: Span(4..5) }
Token { kind: IDENT, span: Span(5..9) }
Token { kind: WHITESPACE, span: Span(9..10) }
Token { kind: L_BRACE, span: Span(10..11) }
Token { kind: NEWLINE, span: Span(11..12) }
Token { kind: WHITESPACE, span: Span(12..13) }
Begin { kind: ERROR, span: Span(13..34) }
Token { kind: STRINGS_KW, span: Span(13..20) }
Token { kind: COLON, span: Span(20..21) }
Token { kind: NEWLINE, span: Span(21..22) }
Token { kind: WHITESPACE, span: Span(22..25) }
Begin { kind: ERROR, span: Span(25..29) }
Token { kind: PATTERN_IDENT, span: Span(25..27) }
Token { kind: WHITESPACE, span: Span(27..28) }
Token { kind: EQUAL, span: Span(28..29) }
End { kind: ERROR, span: Span(25..29) }
Token { kind: WHITESPACE, span: Span(29..30) }
Error { message: "expecting `[`, BYTE, `(` or `}`, found `condition`", span: Span(37..46) }
Token { kind: L_BRACE, span: Span(30..31) }
Token { kind: WHITESPACE, span: Span(31..32) }
Token { kind: HEX_BYTE, span: Span(32..34) }
End { kind: ERROR, span: Span(13..34) }
Token { kind: NEWLINE, span: Span(34..35) }
Token { kind: WHITESPACE, span: Span(35..37) }
Begin { kind: CONDITION_BLK, span: Span(37..55) }
Token { kind: CONDITION_KW, span: Span(37..46) }
Token { kind: COLON, span: Span(46..47) }
Token { kind: NEWLINE, span: Span(47..48) }
Token { kind: WHITESPACE, span: Span(48..51) }
Begin { kind: BOOLEAN_EXPR, span: Span(51..55) }
Begin { kind: BOOLEAN_TERM, span: Span(51..55) }
Token { kind: TRUE_KW, span: Span(51..55) }
End { kind: BOOLEAN_TERM, span: Span(51..55) }
End { kind: BOOLEAN_EXPR, span: Span(51..55) }
End { kind: CONDITION_BLK, span: Span(37..55) }
Token { kind: NEWLINE, span: Span(55..56) }
Token { kind: R_BRACE, span: Span(56..57) }
End { kind: RULE_DECL, span: Span(0..57) }
End { kind: SOURCE_FILE, span: Span(0..57) }
