Begin { kind: SOURCE_FILE, span: Span(0..70) }
Begin { kind: RULE_DECL, span: Span(0..70) }
Token { kind: RULE_KW, span: Span(0..4) }
Token { kind: WHITESPACE, span: Span(4..5) }
Token { kind: IDENT, span: Span(5..9) }
Token { kind: WHITESPACE, span: Span(9..10) }
Token { kind: L_BRACE, span: Span(10..11) }
Token { kind: NEWLINE, span: Span(11..12) }
Token { kind: WHITESPACE, span: Span(12..13) }
Begin { kind: ERROR, span: Span(13..47) }
Token { kind: STRINGS_KW, span: Span(13..20) }
Token { kind: COLON, span: Span(20..21) }
Token { kind: NEWLINE, span: Span(21..22) }
Token { kind: WHITESPACE, span: Span(22..24) }
Begin { kind: PATTERN_DEF, span: Span(24..34) }
Token { kind: PATTERN_IDENT, span: Span(24..26) }
Token { kind: WHITESPACE, span: Span(26..27) }
Token { kind: EQUAL, span: Span(27..28) }
Token { kind: WHITESPACE, span: Span(28..29) }
Token { kind: STRING_LIT, span: Span(29..34) }
End { kind: PATTERN_DEF, span: Span(24..34) }
Token { kind: NEWLINE, span: Span(34..35) }
Token { kind: WHITESPACE, span: Span(35..38) }
Token { kind: PATTERN_IDENT, span: Span(38..40) }
Token { kind: WHITESPACE, span: Span(40..41) }
Token { kind: EQUAL, span: Span(41..42) }
Token { kind: WHITESPACE, span: Span(42..43) }
Token { kind: L_BRACE, span: Span(43..44) }
Token { kind: WHITESPACE, span: Span(44..45) }
Token { kind: HEX_BYTE, span: Span(45..47) }
End { kind: ERROR, span: Span(13..47) }
Token { kind: NEWLINE, span: Span(47..48) }
Token { kind: WHITESPACE, span: Span(48..50) }
Begin { kind: CONDITION_BLK, span: Span(50..68) }
Token { kind: CONDITION_KW, span: Span(50..59) }
Error { message: "expecting `[`, BYTE, `(` or `}`, found `condition`", span: Span(50..59) }
Token { kind: COLON, span: Span(59..60) }
Token { kind: NEWLINE, span: Span(60..61) }
Token { kind: WHITESPACE, span: Span(61..64) }
Begin { kind: BOOLEAN_EXPR, span: Span(64..68) }
Begin { kind: BOOLEAN_TERM, span: Span(64..68) }
Token { kind: TRUE_KW, span: Span(64..68) }
End { kind: BOOLEAN_TERM, span: Span(64..68) }
End { kind: BOOLEAN_EXPR, span: Span(64..68) }
End { kind: CONDITION_BLK, span: Span(50..68) }
Token { kind: NEWLINE, span: Span(68..69) }
Token { kind: R_BRACE, span: Span(69..70) }
End { kind: RULE_DECL, span: Span(0..70) }
End { kind: SOURCE_FILE, span: Span(0..70) }
