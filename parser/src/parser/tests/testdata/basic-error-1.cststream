Begin { kind: SOURCE_FILE, span: Span(0..58) }
Begin { kind: RULE_DECL, span: Span(0..58) }
Token { kind: RULE_KW, span: Span(0..4) }
Token { kind: WHITESPACE, span: Span(4..5) }
Token { kind: IDENT, span: Span(5..9) }
Token { kind: WHITESPACE, span: Span(9..10) }
Token { kind: L_BRACE, span: Span(10..11) }
Begin { kind: ERROR, span: Span(11..56) }
Token { kind: L_BRACE, span: Span(11..12) }
Error { message: "expecting `meta`, `strings` or `condition`, found `{`", span: Span(11..12) }
Token { kind: NEWLINE, span: Span(12..13) }
Token { kind: WHITESPACE, span: Span(13..15) }
Token { kind: META_KW, span: Span(15..19) }
Token { kind: COLON, span: Span(19..20) }
Token { kind: NEWLINE, span: Span(20..21) }
Token { kind: WHITESPACE, span: Span(21..26) }
Token { kind: IDENT, span: Span(26..29) }
Token { kind: WHITESPACE, span: Span(29..30) }
Token { kind: EQUAL, span: Span(30..31) }
Token { kind: WHITESPACE, span: Span(31..32) }
Token { kind: INTEGER_LIT, span: Span(32..33) }
Token { kind: NEWLINE, span: Span(33..34) }
Token { kind: WHITESPACE, span: Span(34..36) }
Token { kind: CONDITION_KW, span: Span(36..45) }
Token { kind: COLON, span: Span(45..46) }
Token { kind: NEWLINE, span: Span(46..47) }
Token { kind: WHITESPACE, span: Span(47..52) }
Token { kind: TRUE_KW, span: Span(52..56) }
End { kind: ERROR, span: Span(11..56) }
Token { kind: NEWLINE, span: Span(56..57) }
Token { kind: R_BRACE, span: Span(57..58) }
End { kind: RULE_DECL, span: Span(0..58) }
End { kind: SOURCE_FILE, span: Span(0..58) }
