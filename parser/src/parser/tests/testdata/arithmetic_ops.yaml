###############################################################################

- rule: |
    rule test {
      condition:
        1 + 2.5 * -2 * -1.0 == 10.0 \ 2 + -(-1)
    }
  ast: |
    root
    └─ rule test
       └─ condition
          └─ eq
             ├─ add
             │  ├─ 1
             │  └─ mul
             │     ├─ 2.5
             │     ├─ -2
             │     └─ -1.0
             └─ add
                ├─ div
                │  ├─ 10.0
                │  └─ 2
                └─ minus
                   └─ -1

###############################################################################

- rule: |
    rule test {
      condition:
        (1 + 2.5) * -2 * -1.0 == 10.0 \ (2 + -(-1))
    }
  ast: |
    root
    └─ rule test
       └─ condition
          └─ eq
             ├─ mul
             │  ├─ add
             │  │  ├─ 1
             │  │  └─ 2.5
             │  ├─ -2
             │  └─ -1.0
             └─ div
                ├─ 10.0
                └─ add
                   ├─ 2
                   └─ minus
                      └─ -1

###############################################################################

- rule: |
    rule test {
      condition:
        5 \ 2 == 8 % 3
    }
  ast: |
    root
    └─ rule test
       └─ condition
          └─ eq
             ├─ div
             │  ├─ 5
             │  └─ 2
             └─ mod
                ├─ 8
                └─ 3

###############################################################################

- rule: |
    rule test {
      condition:
        5 - 2 != 6 - 3
    }
  ast: |
    root
    └─ rule test
       └─ condition
          └─ ne
             ├─ sub
             │  ├─ 5
             │  └─ 2
             └─ sub
                ├─ 6
                └─ 3

###############################################################################

- rule: |
    rule test {
      condition:
        // The result of integer division and modulo where divisor is zero is
        // undefined, therefore their value at compile time will be unknown.
        10 \ 0 == 10 % 0
    }
  ast: |
    root
    └─ rule test
       └─ condition
          └─ eq
             ├─ div
             │  ├─ 10
             │  └─ 0
             └─ mod
                ├─ 10
                └─ 0

###############################################################################

- rule: |
    rule test {
      condition:
        // Floating-point division and modulo where divisor is zero. Unlike the
        // integer case, the result of such operation is defined and their values
        // at compile time can be computed.
        5.0 \ 0 == 10 % 0.0
    }
  ast: |
    root
    └─ rule test
       └─ condition
          └─ eq
             ├─ div
             │  ├─ 5.0
             │  └─ 0
             └─ mod
                ├─ 10
                └─ 0.0

###############################################################################