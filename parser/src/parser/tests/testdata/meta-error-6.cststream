Begin { kind: SOURCE_FILE, span: Span(0..105) }
Begin { kind: RULE_DECL, span: Span(0..105) }
Token { kind: RULE_KW, span: Span(0..4) }
Token { kind: WHITESPACE, span: Span(4..5) }
Token { kind: IDENT, span: Span(5..9) }
Token { kind: WHITESPACE, span: Span(9..10) }
Token { kind: L_BRACE, span: Span(10..11) }
Token { kind: NEWLINE, span: Span(11..12) }
Token { kind: WHITESPACE, span: Span(12..14) }
Begin { kind: ERROR, span: Span(14..29) }
Token { kind: META_KW, span: Span(14..18) }
Token { kind: COLON, span: Span(18..19) }
Token { kind: NEWLINE, span: Span(19..20) }
Token { kind: WHITESPACE, span: Span(20..24) }
Begin { kind: ERROR, span: Span(24..29) }
Token { kind: IDENT, span: Span(24..27) }
Token { kind: WHITESPACE, span: Span(27..28) }
Token { kind: EQUAL, span: Span(28..29) }
End { kind: ERROR, span: Span(24..29) }
End { kind: ERROR, span: Span(14..29) }
Token { kind: NEWLINE, span: Span(29..30) }
Token { kind: WHITESPACE, span: Span(30..32) }
Begin { kind: ERROR, span: Span(32..81) }
Token { kind: STRINGS_KW, span: Span(32..39) }
Error { message: "expecting `-`, INTEGER, FLOAT, STRING, `true` or `false`, found `strings`", span: Span(32..39) }
Token { kind: NEWLINE, span: Span(39..40) }
Error { message: "expecting `:`, found `bar`", span: Span(44..47) }
Token { kind: WHITESPACE, span: Span(40..44) }
Token { kind: IDENT, span: Span(44..47) }
Token { kind: WHITESPACE, span: Span(47..48) }
Token { kind: EQUAL, span: Span(48..49) }
Token { kind: WHITESPACE, span: Span(49..50) }
Token { kind: STRING_LIT, span: Span(50..55) }
Token { kind: NEWLINE, span: Span(55..56) }
Token { kind: WHITESPACE, span: Span(56..58) }
Token { kind: STRINGS_KW, span: Span(58..65) }
Token { kind: COLON, span: Span(65..66) }
Token { kind: NEWLINE, span: Span(66..67) }
Token { kind: WHITESPACE, span: Span(67..71) }
Token { kind: PATTERN_IDENT, span: Span(71..73) }
Token { kind: WHITESPACE, span: Span(73..74) }
Token { kind: EQUAL, span: Span(74..75) }
Token { kind: WHITESPACE, span: Span(75..76) }
Token { kind: STRING_LIT, span: Span(76..81) }
End { kind: ERROR, span: Span(32..81) }
Token { kind: NEWLINE, span: Span(81..82) }
Token { kind: WHITESPACE, span: Span(82..84) }
Begin { kind: CONDITION_BLK, span: Span(84..103) }
Token { kind: CONDITION_KW, span: Span(84..93) }
Token { kind: COLON, span: Span(93..94) }
Token { kind: NEWLINE, span: Span(94..95) }
Token { kind: WHITESPACE, span: Span(95..99) }
Begin { kind: BOOLEAN_EXPR, span: Span(99..103) }
Begin { kind: BOOLEAN_TERM, span: Span(99..103) }
Token { kind: TRUE_KW, span: Span(99..103) }
End { kind: BOOLEAN_TERM, span: Span(99..103) }
End { kind: BOOLEAN_EXPR, span: Span(99..103) }
End { kind: CONDITION_BLK, span: Span(84..103) }
Token { kind: NEWLINE, span: Span(103..104) }
Token { kind: R_BRACE, span: Span(104..105) }
End { kind: RULE_DECL, span: Span(0..105) }
End { kind: SOURCE_FILE, span: Span(0..105) }
