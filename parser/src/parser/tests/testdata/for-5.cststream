Begin { kind: SOURCE_FILE, span: Span(0..61) }
Begin { kind: RULE_DECL, span: Span(0..59) }
Token { kind: RULE_KW, span: Span(0..4) }
Token { kind: WHITESPACE, span: Span(4..5) }
Token { kind: IDENT, span: Span(5..9) }
Token { kind: WHITESPACE, span: Span(9..10) }
Token { kind: L_BRACE, span: Span(10..11) }
Token { kind: NEWLINE, span: Span(11..12) }
Token { kind: WHITESPACE, span: Span(12..13) }
Begin { kind: CONDITION_BLK, span: Span(13..57) }
Token { kind: CONDITION_KW, span: Span(13..22) }
Token { kind: COLON, span: Span(22..23) }
Token { kind: NEWLINE, span: Span(23..24) }
Token { kind: WHITESPACE, span: Span(24..26) }
Begin { kind: BOOLEAN_EXPR, span: Span(26..57) }
Begin { kind: BOOLEAN_TERM, span: Span(26..57) }
Begin { kind: FOR_EXPR, span: Span(26..57) }
Token { kind: FOR_KW, span: Span(26..29) }
Token { kind: WHITESPACE, span: Span(29..30) }
Begin { kind: QUANTIFIER, span: Span(30..33) }
Token { kind: ANY_KW, span: Span(30..33) }
End { kind: QUANTIFIER, span: Span(30..33) }
Token { kind: WHITESPACE, span: Span(33..34) }
Token { kind: IDENT, span: Span(34..35) }
Token { kind: WHITESPACE, span: Span(35..36) }
Token { kind: IN_KW, span: Span(36..38) }
Token { kind: WHITESPACE, span: Span(38..39) }
Begin { kind: ITERABLE, span: Span(39..46) }
Begin { kind: EXPR_TUPLE, span: Span(39..46) }
Token { kind: L_PAREN, span: Span(39..40) }
Begin { kind: EXPR, span: Span(40..41) }
Begin { kind: TERM, span: Span(40..41) }
Begin { kind: PRIMARY_EXPR, span: Span(40..41) }
Token { kind: INTEGER_LIT, span: Span(40..41) }
End { kind: PRIMARY_EXPR, span: Span(40..41) }
End { kind: TERM, span: Span(40..41) }
End { kind: EXPR, span: Span(40..41) }
Token { kind: COMMA, span: Span(41..42) }
Begin { kind: EXPR, span: Span(42..43) }
Begin { kind: TERM, span: Span(42..43) }
Begin { kind: PRIMARY_EXPR, span: Span(42..43) }
Token { kind: INTEGER_LIT, span: Span(42..43) }
End { kind: PRIMARY_EXPR, span: Span(42..43) }
End { kind: TERM, span: Span(42..43) }
End { kind: EXPR, span: Span(42..43) }
Token { kind: COMMA, span: Span(43..44) }
Begin { kind: EXPR, span: Span(44..45) }
Begin { kind: TERM, span: Span(44..45) }
Begin { kind: PRIMARY_EXPR, span: Span(44..45) }
Token { kind: INTEGER_LIT, span: Span(44..45) }
End { kind: PRIMARY_EXPR, span: Span(44..45) }
End { kind: TERM, span: Span(44..45) }
End { kind: EXPR, span: Span(44..45) }
Token { kind: R_PAREN, span: Span(45..46) }
End { kind: EXPR_TUPLE, span: Span(39..46) }
End { kind: ITERABLE, span: Span(39..46) }
Token { kind: WHITESPACE, span: Span(46..47) }
Token { kind: COLON, span: Span(47..48) }
Token { kind: WHITESPACE, span: Span(48..49) }
Token { kind: L_PAREN, span: Span(49..50) }
Begin { kind: BOOLEAN_EXPR, span: Span(50..56) }
Begin { kind: BOOLEAN_TERM, span: Span(50..56) }
Begin { kind: EXPR, span: Span(50..51) }
Begin { kind: TERM, span: Span(50..51) }
Begin { kind: PRIMARY_EXPR, span: Span(50..51) }
Token { kind: IDENT, span: Span(50..51) }
End { kind: PRIMARY_EXPR, span: Span(50..51) }
End { kind: TERM, span: Span(50..51) }
End { kind: EXPR, span: Span(50..51) }
Token { kind: WHITESPACE, span: Span(51..52) }
Token { kind: EQ, span: Span(52..54) }
Token { kind: WHITESPACE, span: Span(54..55) }
Begin { kind: EXPR, span: Span(55..56) }
Begin { kind: TERM, span: Span(55..56) }
Begin { kind: PRIMARY_EXPR, span: Span(55..56) }
Token { kind: INTEGER_LIT, span: Span(55..56) }
End { kind: PRIMARY_EXPR, span: Span(55..56) }
End { kind: TERM, span: Span(55..56) }
End { kind: EXPR, span: Span(55..56) }
End { kind: BOOLEAN_TERM, span: Span(50..56) }
End { kind: BOOLEAN_EXPR, span: Span(50..56) }
Token { kind: R_PAREN, span: Span(56..57) }
End { kind: FOR_EXPR, span: Span(26..57) }
End { kind: BOOLEAN_TERM, span: Span(26..57) }
End { kind: BOOLEAN_EXPR, span: Span(26..57) }
End { kind: CONDITION_BLK, span: Span(13..57) }
Token { kind: NEWLINE, span: Span(57..58) }
Token { kind: R_BRACE, span: Span(58..59) }
End { kind: RULE_DECL, span: Span(0..59) }
Token { kind: NEWLINE, span: Span(59..60) }
Token { kind: NEWLINE, span: Span(60..61) }
End { kind: SOURCE_FILE, span: Span(0..61) }
